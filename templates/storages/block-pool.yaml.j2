## curl -L https://raw.githubusercontent.com/rook/rook/master/cluster/examples/kubernetes/ceph/pool.yaml > block-pool.yaml
## curl -L https://raw.githubusercontent.com/rook/rook/master/cluster/examples/kubernetes/ceph/pool-ec.yaml > block-pool-ec.yaml

#################################################################################################################
# Create a Ceph pool with settings for erasure coding. A minimum of 3 OSDs are required in this example.
#  kubectl create -f pool-ec.yaml
#################################################################################################################

apiVersion: ceph.rook.io/v1
kind: CephBlockPool
metadata:
  name: {{ item.pool_name }}
  namespace: {{ rook_cluster_namespace }}
spec:
  # The failure domain will spread the replicas of the data across different failure zones
  failureDomain: {{ item.failureDomain | default('host') }}
  # Make sure you have enough OSDs to support the replica size or sum of the erasure coding and data chunks.
{% if item.replicated is defined %}
  # For a pool based on raw copies, specify the number of copies. A size of 1 indicates no redundancy.
  replicated:
    size: {{ item.replicated.size }}
    # Disallow setting pool with replica 1, this could lead to data loss without recovery.
    # Make sure you're *ABSOLUTELY CERTAIN* that is what you want
    requireSafeReplicaSize: true
    # gives a hint (%) to Ceph in terms of expected consumption of the total cluster capacity of a given pool
    # for more info: https://docs.ceph.com/docs/master/rados/operations/placement-groups/#specifying-expected-pool-size
    #targetSizeRatio: .5
{% endif %}
{% if item.erasureCoded is defined %}
  # This is the minimal example that requires only 3 OSDs.
  erasureCoded:
    dataChunks: {{ item.erasureCoded.dataChunks | default(2) }}
    codingChunks: {{ item.erasureCoded.codingChunks | default(1) }}
{% endif %}
  # Inline compression mode for the data pool
  compressionMode: none
  # A key/value list of annotations
  annotations:
  #  key: value
